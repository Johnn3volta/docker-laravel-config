version: "3.7"

networks:
  appnet:
    driver: bridge

services:

  nginx:
    build: ./docker/nginx
    container_name: nginx
    #    user: "www-data"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - appnet

  app:
    build: ./docker/php
    container_name: app
    restart: unless-stopped
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - appnet

  node:
    build: ./docker/node
    container_name: node
    tty: true
    user: "${UID}:${GID}"
    volumes:
      - ${APP_PATH}:/app
    networks:
      - appnet
    entrypoint: npm install

  database:
    image: mysql:5.7.22
    container_name: database
    restart: unless-stopped
    user: "${UID}:${GID}"
    volumes:
      - ./docker/mysql/db:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    networks:
      - appnet

  composer:
    image: composer:1.6
    container_name: composer
    user: "1000:www-data"
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
    working_dir: ${DOCUMENT_ROOT}
    entrypoint: composer install

